import Head from 'next/head';
import { CommonLayout } from '@/components/layout/common-layout';
import { ReactElement, ReactNode } from 'react';
import Container from '@/components/common/container';
import { useTagArtworksQuery } from '@/graphql/__generated__/graphql';
import GridArtworks from '@/components/common/grid-artworks';
import { useRouter } from 'next/router';

export default function Tag() {
    const router = useRouter();
    const { tag } = router.query;
    const { data, loading, error, fetchMore, refetch } = useTagArtworksQuery({
        variables: {
            tagname: tag as string,
        },
        notifyOnNetworkStatusChange: true,
        fetchPolicy: 'network-only',
        nextFetchPolicy: 'cache-first',
    });

    return (
        <>
            <Head>
                <title>{tag}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Container>
                {!data && loading && <div>TAG ARTWORKS LOADING</div>}
                <button onClick={() => refetch()}>Check For New Posts</button>

                {data?.tagArtworks.artworks && !error && (
                    <>
                        <GridArtworks artworks={data.tagArtworks.artworks} />
                    </>
                )}
                {/* Eventually will be moved into an infinite scroll component */}
                {data && data?.tagArtworks.hasMore && (
                    <button
                        className="w-26 mx-auto text-pink-500 bg-black px-2 py-1 rounded-md"
                        onClick={() => {
                            fetchMore({
                                variables: {
                                    take: 10,
                                    skip: data.tagArtworks.artworks.length,
                                },
                            });
                        }}
                    >
                        Load More Artworks
                    </button>
                )}
            </Container>
        </>
    );
}

Tag.getLayout = (page: ReactElement): ReactNode => <CommonLayout>{page}</CommonLayout>;
