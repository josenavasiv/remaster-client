import Head from 'next/head';
import { CommonLayout } from '@/components/layout/common-layout';
import { ReactElement, ReactNode } from 'react';
import { useTagArtworksQuery } from '@/graphql/__generated__/graphql';
import GridArtworks from '@/components/common/grid-artworks';
import TagName from '@/components/tag/tag-name';
import { useRouter } from 'next/router';
import { MainLayout } from '@/components/layout/main-layout';
import MainContainer from '@/components/common/main-container';
import toast from 'react-hot-toast';

export default function Tag() {
    const router = useRouter();
    const { tag } = router.query;
    const { data, loading, error, fetchMore, refetch } = useTagArtworksQuery({
        variables: {
            tagname: tag as string,
        },
        notifyOnNetworkStatusChange: true,
        // fetchPolicy: 'network-only',
        nextFetchPolicy: 'cache-first',
    });

    return (
        <>
            <Head>
                <title>{tag}</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <MainContainer>
                <div className="flex justify-between pb-3">
                    <TagName tagname={tag as string} />
                    {!data && loading && <div>TAG ARTWORKS LOADING</div>}

                    <button
                        className="self-end font-bold bg-[#E94E77] text-[#f4ead5] px-2 py-1 mb-2 rounded-md"
                        onClick={() => {
                            refetch();
                            toast.success('Refreshed!');
                        }}
                    >
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            strokeWidth={1.5}
                            stroke="currentColor"
                            className="w-6 h-6 stroke-2"
                        >
                            <path
                                strokeLinecap="round"
                                strokeLinejoin="round"
                                d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"
                            />
                        </svg>
                    </button>
                </div>

                {data?.tagArtworks.artworks && !error && (
                    <>
                        <GridArtworks artworks={data.tagArtworks.artworks} />
                    </>
                )}
                {/* Eventually will be moved into an infinite scroll component */}
                {data && data?.tagArtworks.hasMore && (
                    <button
                        className="w-26 mx-auto font-bold text-black bg-pink-300 px-2 py-1 mb-2 rounded-md"
                        onClick={() => {
                            fetchMore({
                                variables: {
                                    take: 10,
                                    skip: data.tagArtworks.artworks.length,
                                },
                            });
                        }}
                    >
                        Load More Artworks
                    </button>
                )}
            </MainContainer>
        </>
    );
}

Tag.getLayout = (page: ReactElement): ReactNode => (
    <CommonLayout>
        <MainLayout>{page}</MainLayout>
    </CommonLayout>
);
